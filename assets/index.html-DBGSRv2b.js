import{_ as l,e,f as i,g as t,h as a,i as p,j as h,r as d,o as k}from"./app-B14-sJo6.js";const r={};function o(c,s){const n=d("RouteLink");return k(),e("div",null,[s[1]||(s[1]=i("p",null,[i("code",null,"BasePlugin"),a(" 提供了注册定时任务的功能.")],-1)),s[2]||(s[2]=i("h2",{id:"注册定时任务",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#注册定时任务"},[i("span",null,"注册定时任务")])],-1)),s[3]||(s[3]=i("p",null,[a("一般在 "),i("code",null,"BasePlugin.on_load()"),a(" 方法中时注册定时任务.")],-1)),i("p",null,[p(n,{to:"/notes/guide/8.%20%E5%AE%9E%E9%99%85%E9%A1%B9%E7%9B%AE%E5%8F%82%E8%80%83/%E6%95%99%E7%A8%8B%E9%A1%B9%E7%9B%AE/%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1%E6%8F%92%E4%BB%B6.html"},{default:h(()=>s[0]||(s[0]=[a("实际案例")])),_:1})]),s[4]||(s[4]=t(`<h2 id="函数原型和使用方法" tabindex="-1"><a class="header-anchor" href="#函数原型和使用方法"><span>函数原型和使用方法</span></a></h2><p>通过 <code>BasePlugin.add_scheduled_task</code> 来注册定时任务，函数原型如下：</p><div class="language-python line-numbers-mode" data-ext="python" data-title="python"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">class</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;"> BasePlugin</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    @</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">final</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">    def</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> add_scheduled_task</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        self</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        job_func</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> Callable</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        name</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> str</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        interval</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> Union</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">[</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">str</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> int</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> float</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">],</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        conditions</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> Optional</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">[</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">List</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">[</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">Callable</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">[[],</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> bool</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">]]]</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> None</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        max_runs</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> Optional</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">[</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">int</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">]</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> None</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        args</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> Optional</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">[</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">Tuple</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">]</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> None</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        kwargs</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> Optional</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">[</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">Dict</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">]</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> None</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        args_provider</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> Optional</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">[</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">Callable</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">[[],</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> Tuple</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">]]</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> None</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        kwargs_provider</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> Optional</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">[</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">Callable</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">[[],</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> Dict</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">[</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">str</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> Any</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">]]]</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> None</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    )</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> -&gt;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> bool</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">        &quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">        添加定时任务</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">        Args:</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">            job_func (Callable): 要执行的任务函数</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">            name (str): 任务唯一标识名称</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">            interval (Union[str, int, float]): 调度时间参数</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">            conditions (Optional[List[Callable]]): 执行条件列表</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">            max_runs (Optional[int]): 最大执行次数</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">            args (Optional[Tuple]): 静态位置参数</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">            kwargs (Optional[Dict]): 静态关键字参数</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">            args_provider (Optional[Callable]): 动态位置参数生成函数</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">            kwargs_provider (Optional[Callable]): 动态关键字参数生成函数</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">        Returns:</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">            bool: 是否添加成功</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">        Raises:</span></span>
<span class="line"><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">            ValueError: 当参数冲突或时间格式无效时</span></span>
<span class="line"><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">        &quot;&quot;&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="注册不同类型的任务" tabindex="-1"><a class="header-anchor" href="#注册不同类型的任务"><span>注册不同类型的任务</span></a></h3><p>通过 <code>interval</code> 参数来明确任务类型.</p><ul><li>一次性任务: 传入字符串格式为 <code>YYYY-MM-DD HH:MM:SS</code> 或 GitHub Action 格式 <code>YYYY:MM:DD-HH:MM:SS</code>. 在这个时间点执行一次.</li><li>间隔任务: 传入字符串格式为 <code>120s</code>, <code>2h30m</code>, <code>0.5d</code> 或冒号分隔格式 <code>00:15:30</code> (时:分:秒) 或自然语言格式 <code>2天3小时5秒</code>. 从当前开始, 经过指定时间间隔后执行一次.</li><li>每日任务: 传入字符串格式为 <code>HH:MM</code>. 每天在这个时间点执行一次.</li></ul><p>任务的时间精度有限, 大约有 5s 的误差.</p><h3 id="任务回调函数" tabindex="-1"><a class="header-anchor" href="#任务回调函数"><span>任务回调函数</span></a></h3><p><code>job_func</code> 参数为任务回调函数, 该函数会在任务触发时执行. 会传入一些参数, 参数传入规则如下:</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p><code>args</code> 参数必须写为元组, Python 语法中, <code>(expr)</code> 被解析为一个表达式, 而不是元组, <code>(expr,)</code> 才会被解析为元组.</p></div><ol><li><p><code>args</code> 位置参数:</p><ul><li>通过 <code>args</code> 静态指定, 在 <code>add_scheduled_task</code> 中传入一个 <code>args</code> <strong>元组</strong>可以静态指定参数.</li><li>通过 <code>args_provider</code> 动态指定, 在 <code>add_scheduled_task</code> 中传入一个 <code>args_provider</code> <strong>函数</strong>可以动态指定参数. 函数的返回值必须是元组, 会在任务触发时调用这个函数并生成 <code>job_func</code> 的位置参数.</li><li>两者互斥</li></ul></li><li><p><code>kwargs</code> 命名参数:</p><ul><li>通过 <code>kwargs</code> 静态指定, 在 <code>add_scheduled_task</code> 中传入一个 <code>kwargs</code> <strong>字典</strong>可以静态指定参数.</li><li>通过 <code>kwargs_provider</code> 动态指定, 在 <code>add_scheduled_task</code> 中传入一个 <code>kwargs_provider</code> <strong>函数</strong>可以动态指定参数. 函数的返回值必须是字典, 会在任务触发时调用这个函数并生成 <code>job_func</code> 的命名参数.</li><li>两者互斥</li></ul></li></ol><p>你也可以用 lambda 表达式之类的来实现函数传参.</p><h3 id="最大执行次数" tabindex="-1"><a class="header-anchor" href="#最大执行次数"><span>最大执行次数</span></a></h3><p>通过 <code>max_runs</code> 参数来指定任务的最大执行次数, 当任务执行次数超过这个值时, 任务会被移除.</p><p>一次性任务最大执行次数默认为 1, 禁用 <code>max_runs</code> 参数.</p><h3 id="任务判定条件" tabindex="-1"><a class="header-anchor" href="#任务判定条件"><span>任务判定条件</span></a></h3><p><code>conditions</code> 参数为任务执行条件列表, 是一系列的函数, 每个函数都返回一个布尔值. 当所有函数都返回 <code>True</code> 时, 任务才会被执行.</p>`,17))])}const y=l(r,[["render",o],["__file","index.html.vue"]]),u=JSON.parse('{"path":"/guide/timertask/","title":"定时任务","lang":"zh-CN","frontmatter":{"title":"定时任务","createTime":"2025/03/27 10:07:54","permalink":"/guide/timertask/","description":"BasePlugin 提供了注册定时任务的功能. 注册定时任务 一般在 BasePlugin.on_load() 方法中时注册定时任务. 函数原型和使用方法 通过 BasePlugin.add_scheduled_task 来注册定时任务，函数原型如下： 注册不同类型的任务 通过 interval 参数来明确任务类型. 一次性任务: 传入字符串格式为 ...","head":[["meta",{"property":"og:url","content":"http://docs.ncatbot.xyz/guide/timertask/"}],["meta",{"property":"og:site_name","content":"NcatBot 文档"}],["meta",{"property":"og:title","content":"定时任务"}],["meta",{"property":"og:description","content":"BasePlugin 提供了注册定时任务的功能. 注册定时任务 一般在 BasePlugin.on_load() 方法中时注册定时任务. 函数原型和使用方法 通过 BasePlugin.add_scheduled_task 来注册定时任务，函数原型如下： 注册不同类型的任务 通过 interval 参数来明确任务类型. 一次性任务: 传入字符串格式为 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-06-23T16:23:09.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-23T16:23:09.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"定时任务\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-06-23T16:23:09.000Z\\",\\"author\\":[]}"]]},"headers":[],"readingTime":{"minutes":2.85,"words":856},"git":{"updatedTime":1750695789000,"contributors":[{"name":"liang","username":"liang","email":"2424123787@qq.com","commits":1,"avatar":"https://avatars.githubusercontent.com/liang?v=4","url":"https://github.com/liang"}]},"autoDesc":true,"filePathRelative":"notes/guide/6. 开发 NcatBot 插件/4. 插件高级功能/4.5 定时任务.md","categoryList":[{"id":"4358b5","sort":10000,"name":"notes"},{"id":"c6d211","sort":10001,"name":"guide"},{"id":"617ec3","sort":6,"name":" 开发 NcatBot 插件"},{"id":"892c4f","sort":4,"name":" 插件高级功能"}]}');export{y as comp,u as data};
