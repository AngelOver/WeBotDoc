import{_ as h,e as p,f as i,g as l,h as a,i as n,j as t,r as d,o as r}from"./app-B14-sJo6.js";const k={};function o(g,s){const e=d("RouteLink");return r(),p("div",null,[s[11]||(s[11]=i("h2",{id:"使用功能",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#使用功能"},[i("span",null,"使用功能")])],-1)),i("p",null,[s[1]||(s[1]=a("功能是对")),s[2]||(s[2]=i("strong",null,"事件发布和处理",-1)),s[3]||(s[3]=a("的进一步封装, 使用功能可以方便快捷的接入 NcatBot 的")),n(e,{to:"/notes/guide/6.%20%E5%BC%80%E5%8F%91%20NcatBot%20%E6%8F%92%E4%BB%B6/3.%20%E6%8F%92%E4%BB%B6%E7%9A%84%E4%BA%A4%E4%BA%92%E7%B3%BB%E7%BB%9F/3.3%20%E6%9D%83%E9%99%90%E7%B3%BB%E7%BB%9F.html"},{default:t(()=>s[0]||(s[0]=[a("权限管理机制")])),_:1}),s[4]||(s[4]=a("."))]),s[12]||(s[12]=l('<p>功能的运作对象是<mark>消息事件</mark>, 只有<strong>群聊和私聊消息事件</strong>才会进行下面的判定.</p><p>体现在实际使用中, 直接私聊 Bot 或者在任何一个 Bot 所在的群聊中发送满足条件的消息即可触发功能.</p><h3 id="功能的触发条件" tabindex="-1"><a class="header-anchor" href="#功能的触发条件"><span>功能的触发条件</span></a></h3><p>触发功能要经过两个阶段：</p><ol><li><strong>权限判定</strong>：收到消息后, 对于每个功能会先进行权限判定. 消息<strong>来源</strong>(包括用户 QQ 号和所在群聊群号)会同时参与权限判定，<strong>两者必须都具有权限才会触发</strong>。功能在<strong>注册时</strong>会分配好权限节点, 只有被授权了权限节点的<strong>来源</strong>才能通过权限判定。</li><li><strong>触发判定</strong>: 如果权限判定通过, 则会进行触发判定。触发判定的逻辑由功能注册者决定。请继续阅读本页。</li></ol><h2 id="注册功能" tabindex="-1"><a class="header-anchor" href="#注册功能"><span>注册功能</span></a></h2>',6)),i("p",null,[s[6]||(s[6]=a("注册功能需要在插件==")),n(e,{to:"/notes/guide/6.%20%E5%BC%80%E5%8F%91%20NcatBot%20%E6%8F%92%E4%BB%B6/2.%20%E6%8F%92%E4%BB%B6%E7%9A%84%E5%8A%A0%E8%BD%BD%E5%92%8C%E5%8D%B8%E8%BD%BD.html#%E6%8F%92%E4%BB%B6%E5%8A%A0%E8%BD%BD"},{default:t(()=>s[5]||(s[5]=[a("加载")])),_:1}),s[7]||(s[7]=a("时==进行."))]),s[13]||(s[13]=l(`<p>以下函数用于注册功能:</p><div class="language-python line-numbers-mode" data-ext="python" data-title="python"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">def</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> register_user_func</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        self</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        name</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> str</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        handler</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> Callable</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">[[</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">BaseMessage</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">],</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> Any</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">],</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        filter</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> Callable </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> None</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        prefix</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> str</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> None</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        regex</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> str</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> None</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        permission_raise</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> bool</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> False</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        description</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> str</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        usage</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> str</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        examples</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> List</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">[</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">str</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">]</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> None</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        tags</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> List</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">[</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">str</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">]</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> None</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">        metadata</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> Dict</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">[</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">str</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> Any</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">]</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> None</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">):</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">def</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> register_admin_func</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">...</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="register-default-func-3-8-x-起弃用" tabindex="-1"><a class="header-anchor" href="#register-default-func-3-8-x-起弃用"><span><code>register_default_func</code> (3.8.x 起弃用)</span></a></h3><p>注册一个默认功能, 如果一条消息没有触发<mark>默认功能所在插件的任何其它功能, 也没有触发内置功能</mark>, 则会触发默认功能.</p><ul><li><code>handler</code>: 功能处理函数, 接受一个 <code>BaseMessage</code> 类型的参数, 必须定义为<mark>异步函数</mark>.</li><li><code>permission</code>: 功能权限, 默认为 <code>user</code> 级别 (<code>user</code> 级别的所有权限节点初始时自动分配给每个用户). 其它支持的填写如下: <ul><li><code>user</code> 或者 <code>PermissionGroup.USER.value</code>: 用户级别.</li><li><code>admin</code> 或者 <code>PermissionGroup.ADMIN.value</code>: 管理员级别.</li><li><code>root</code> 或者 <code>PermissionGroup.ROOT.value</code>: 超级管理员级别.</li></ul></li></ul><h3 id="register-user-func" tabindex="-1"><a class="header-anchor" href="#register-user-func"><span><code>register_user_func</code></span></a></h3><p>注册一个用户功能, 如果能满足触发条件则触发该功能.</p><ul><li><code>name</code>: 功能名称, 用于建立权限结构, 该功能的权限节点为 <code>&lt;plugin_name&gt;.&lt;name&gt;</code>. 功能.</li><li><code>handler</code>: 功能处理函数, 接受一个 <code>BaseMessage</code> 类型的参数, .</li><li><code>filter</code>: 自定义过滤函数, 接受一个 <code>Event</code> 类型的参数, 返回布尔值表示是否触发功能. 如果为 <code>None</code> 则不进行过滤.</li><li><code>prefix</code>: 前缀匹配字符串, 如果消息以该前缀开头则触发功能. 例如 <code>prefix=&quot;/help&quot;</code> 会匹配以 &quot;/help&quot; 开头的消息.</li><li><code>regex</code>: 正则表达式字符串, 如果消息匹配该正则表达式则触发功能. 例如 <code>regex=&quot;\\d*&quot;</code> 会匹配包含任意数量数字的消息. 可以使用 Python 的 re 模块支持的所有正则表达式语法.</li><li><code>description</code>: 功能描述, 用于帮助文档.</li><li><code>permission_raise</code>: 是否针对群聊提权, 如果 <code>user_id</code> (消息发送者 QQ 号) 为 admin 级别及以上权限, 则临时提升消息来源群聊的权限为 <code>root</code>. 私聊被分在一个特殊的群组, 权限为 <code>root</code>.</li><li><code>usage</code>: 使用说明, 用于帮助文档.</li><li><code>examples</code>: 使用示例列表, 用于帮助文档.</li><li><code>tags</code>: 功能标签列表, 用于功能分类.</li><li><code>metadata</code>: 额外元数据字典, 可以存储任意自定义数据.</li></ul><p>注意: <code>filter</code>, <code>prefix</code>, <code>regex</code> 三个参数可以组合使用, 组合时需要同时满足所有条件才会触发功能. 如果都为 <code>None</code> 则该功能会被每条消息触发(不推荐).</p><h3 id="register-admin-func" tabindex="-1"><a class="header-anchor" href="#register-admin-func"><span><code>register_admin_func</code></span></a></h3><p>注册一个管理员功能, 如果能满足触发条件则触发该功能, 其它同上.</p><h2 id="内置功能" tabindex="-1"><a class="header-anchor" href="#内置功能"><span>内置功能</span></a></h2>`,12)),i("p",null,[s[9]||(s[9]=a("参考")),n(e,{to:"/notes/guide/6.%20%E5%BC%80%E5%8F%91%20NcatBot%20%E6%8F%92%E4%BB%B6/3.%20%E6%8F%92%E4%BB%B6%E7%9A%84%E4%BA%A4%E4%BA%92%E7%B3%BB%E7%BB%9F/3.4%20%E5%86%85%E7%BD%AE%E5%8A%9F%E8%83%BD.html"},{default:t(()=>s[8]||(s[8]=[a("内置功能")])),_:1})]),s[14]||(s[14]=i("h2",{id:"例子",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#例子"},[i("span",null,"例子")])],-1)),i("p",null,[n(e,{to:"/notes/guide/8.%20%E5%AE%9E%E9%99%85%E9%A1%B9%E7%9B%AE%E5%8F%82%E8%80%83/2.%20LLM_API%20%E6%8F%92%E4%BB%B6%E9%A1%B9%E7%9B%AE.html#on_load"},{default:t(()=>s[10]||(s[10]=[a("LLM_API 插件")])),_:1})])])}const B=h(k,[["render",o],["__file","index.html.vue"]]),E=JSON.parse('{"path":"/guide/regifunc/","title":"注册功能","lang":"zh-CN","frontmatter":{"title":"注册功能","createTime":"2025-03-27T10:52:00.000Z","permalink":"/guide/regifunc/","description":"使用功能 功能是对事件发布和处理的进一步封装, 使用功能可以方便快捷的接入 NcatBot 的. 功能的运作对象是消息事件, 只有群聊和私聊消息事件才会进行下面的判定. 体现在实际使用中, 直接私聊 Bot 或者在任何一个 Bot 所在的群聊中发送满足条件的消息即可触发功能. 功能的触发条件 触发功能要经过两个阶段： 权限判定：收到消息后, 对于每个功...","head":[["meta",{"property":"og:url","content":"http://docs.ncatbot.xyz/guide/regifunc/"}],["meta",{"property":"og:site_name","content":"NcatBot 文档"}],["meta",{"property":"og:title","content":"注册功能"}],["meta",{"property":"og:description","content":"使用功能 功能是对事件发布和处理的进一步封装, 使用功能可以方便快捷的接入 NcatBot 的. 功能的运作对象是消息事件, 只有群聊和私聊消息事件才会进行下面的判定. 体现在实际使用中, 直接私聊 Bot 或者在任何一个 Bot 所在的群聊中发送满足条件的消息即可触发功能. 功能的触发条件 触发功能要经过两个阶段： 权限判定：收到消息后, 对于每个功..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-06-23T16:23:09.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-23T16:23:09.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"注册功能\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-06-23T16:23:09.000Z\\",\\"author\\":[]}"]]},"headers":[],"readingTime":{"minutes":3.41,"words":1024},"git":{"updatedTime":1750695789000,"contributors":[{"name":"liang","username":"liang","email":"2424123787@qq.com","commits":1,"avatar":"https://avatars.githubusercontent.com/liang?v=4","url":"https://github.com/liang"}]},"autoDesc":true,"filePathRelative":"notes/guide/6. 开发 NcatBot 插件/3. 插件的交互系统/3.2 注册功能.md","categoryList":[{"id":"4358b5","sort":10000,"name":"notes"},{"id":"c6d211","sort":10001,"name":"guide"},{"id":"617ec3","sort":6,"name":" 开发 NcatBot 插件"},{"id":"7c2741","sort":3,"name":" 插件的交互系统"}]}');export{B as comp,E as data};
