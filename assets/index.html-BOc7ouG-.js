import{_ as i,e as a,g as t,o as s}from"./app-B14-sJo6.js";const n={};function l(d,e){return s(),a("div",null,e[0]||(e[0]=[t(`<h2 id="插件配置项" tabindex="-1"><a class="header-anchor" href="#插件配置项"><span>插件配置项</span></a></h2><h3 id="注册插件配置项" tabindex="-1"><a class="header-anchor" href="#注册插件配置项"><span>注册插件配置项</span></a></h3><p>NcatBot 插件系统内置了 <code>/cfg</code> 功能, 用于管理插件配置项.</p><p>插件配置项会在正常退出时自动保存, 下次启动时自动加载.</p><div class="hint-container warning"><p class="hint-container-title">注意</p><p>配置项会占用内置可持久化数据的 <code>config</code> 键值.</p></div><p>可以通过 <code>BasePlugin.register_config</code> 注册插件配置项.</p><p>函数原型:</p><div class="language-python line-numbers-mode" data-ext="python" data-title="python"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">def</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> register_config</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    self</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> key</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> str</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> default</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> Any</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> rptr</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> Callable</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">[[</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">str</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">],</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> Any</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">]</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> None</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">):</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>key</code>: 插件配置项键名, 用于建立权限结构, 修改插件配置项所需的权限路径为 <code>cfg.&lt;plugin_name&gt;.&lt;key&gt;</code>.</li><li><code>default</code>: 插件配置项默认值.</li><li><code>rptr</code>: 插件配置项值转换函数, 接受一个 <code>str</code> 类型的参数, 必须定义为<mark>同步函数</mark>, 返回一个 <code>Any</code> 类型的值. 如果留空则不做转换默认为 <code>str</code> 类型.</li></ul><h3 id="更改插件配置项" tabindex="-1"><a class="header-anchor" href="#更改插件配置项"><span>更改插件配置项</span></a></h3><p>触发格式: 向机器人私聊或者在存在机器人的群聊中发送 <code>/cfg &lt;plugin_name&gt;.&lt;cfg_name&gt; &lt;value&gt;</code>.</p><h2 id="查看已安装插件" tabindex="-1"><a class="header-anchor" href="#查看已安装插件"><span>查看已安装插件</span></a></h2><p>默认为<mark>管理员功能</mark>, 用于查看已经安装的插件.</p><p>触发格式: 向机器人私聊或者在存在机器人的群聊中发送 <code>/plg</code>.</p><h2 id="设置管理员" tabindex="-1"><a class="header-anchor" href="#设置管理员"><span>设置管理员</span></a></h2><p>默认为<mark>ROOT功能</mark>, 用于设置管理员.</p><p>触发格式: 向机器人私聊或者在存在机器人的群聊中发送 <code>/sm &lt;user_id&gt;</code></p><p>如果 <code>user_id</code> 已经具有管理员权限, 则会取消其管理员权限.</p><p>BOT 的回复消息会反应管理员权限的状态</p><h2 id="插件热重载" tabindex="-1"><a class="header-anchor" href="#插件热重载"><span>插件热重载</span></a></h2><p>默认为<mark>管理员功能</mark>, 用于热重载插件。调试时非常有用。</p><p>触发格式: 向机器人私聊或者在存在机器人的群聊中发送 <code>/reload [-f] &lt;plugin_name&gt;</code></p><ul><li><code>[-f]</code>: 可选, 用于强制加载插件, 即使插件未加载也会尝试加载.</li><li><code>&lt;plugin_name&gt;</code>: 插件名称.</li></ul><p>如果插件未加载且未使用 <code>-f</code> 参数, 则会提示使用 <code>-f</code> 参数强制加载.</p><h2 id="管理权限" tabindex="-1"><a class="header-anchor" href="#管理权限"><span>管理权限</span></a></h2><p>默认为<mark>管理员功能</mark>, 用于细致化修改权限.</p><p>触发格式: 向机器人私聊或者在存在机器人的群聊中发送 <code>/acs [-g] [ban]/[grant] &lt;number&gt; &lt;path&gt;</code></p><ul><li><code>[-g]</code>: 可选, 用于明确 <code>&lt;number&gt;</code> 是否为群聊.</li><li><code>[ban]/[grant]</code>: 指明是授予黑名单还是白名单, 授予黑名单时同时清除白名单.</li><li><code>&lt;number&gt;</code>: 群聊号或者用户 QQ 号.</li><li><code>&lt;path&gt;</code>: 权限路径, 一般格式为 <code>&lt;plugin_name&gt;.&lt;func_name&gt;</code></li></ul><p><code>/acs</code> 无法操作某些特定的权限路径, 也无法操作具有 <code>/acs</code> 权限的用户.</p>`,29)]))}const o=i(n,[["render",l],["__file","index.html.vue"]]),c=JSON.parse('{"path":"/guide/builtinf/","title":"内置功能","lang":"zh-CN","frontmatter":{"title":"内置功能","createTime":"2025/03/27 10:00:05","permalink":"/guide/builtinf/","description":"插件配置项 注册插件配置项 NcatBot 插件系统内置了 /cfg 功能, 用于管理插件配置项. 插件配置项会在正常退出时自动保存, 下次启动时自动加载. 注意 配置项会占用内置可持久化数据的 config 键值. 可以通过 BasePlugin.register_config 注册插件配置项. 函数原型: key: 插件配置项键名, 用于建立权限结...","head":[["meta",{"property":"og:url","content":"http://docs.ncatbot.xyz/guide/builtinf/"}],["meta",{"property":"og:site_name","content":"NcatBot 文档"}],["meta",{"property":"og:title","content":"内置功能"}],["meta",{"property":"og:description","content":"插件配置项 注册插件配置项 NcatBot 插件系统内置了 /cfg 功能, 用于管理插件配置项. 插件配置项会在正常退出时自动保存, 下次启动时自动加载. 注意 配置项会占用内置可持久化数据的 config 键值. 可以通过 BasePlugin.register_config 注册插件配置项. 函数原型: key: 插件配置项键名, 用于建立权限结..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-06-23T16:23:09.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-23T16:23:09.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"内置功能\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-06-23T16:23:09.000Z\\",\\"author\\":[]}"]]},"headers":[],"readingTime":{"minutes":2.2,"words":660},"git":{"updatedTime":1750695789000,"contributors":[{"name":"liang","username":"liang","email":"2424123787@qq.com","commits":1,"avatar":"https://avatars.githubusercontent.com/liang?v=4","url":"https://github.com/liang"}]},"autoDesc":true,"filePathRelative":"notes/guide/6. 开发 NcatBot 插件/3. 插件的交互系统/3.4 内置功能.md","categoryList":[{"id":"4358b5","sort":10000,"name":"notes"},{"id":"c6d211","sort":10001,"name":"guide"},{"id":"617ec3","sort":6,"name":" 开发 NcatBot 插件"},{"id":"7c2741","sort":3,"name":" 插件的交互系统"}]}');export{o as comp,c as data};
